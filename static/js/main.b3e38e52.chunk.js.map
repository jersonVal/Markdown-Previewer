{"version":3,"sources":["components/Viewer.js","components/Previewer.js","App.js","reportWebVitals.js","index.js"],"names":["Viewer","setText","text","className","onClick","e","div","document","querySelector","target","classList","contains","remove","add","style","height","id","onChange","value","PreViewer","App","useState","textEditor","setTextEditor","useEffect","innerHTML","marked","console","log","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","getElementById"],"mappings":"kPAkCeA,EAhCA,SAAC,GAAkB,IAAjBC,EAAgB,EAAhBA,QAAQC,EAAQ,EAARA,KAoBrB,OACI,sBAAKC,UAAU,mBAAf,UACI,sBAAKA,UAAU,MAAf,UACI,sBAAMA,UAAU,QAAhB,oBACA,mBAAGA,UAAU,2BAA2BC,QAtBhC,SAACC,GACjB,IAAMC,EAAMC,SAASC,cAAc,qBAEhCH,EAAEI,OAAOC,UAAUC,SAAS,yBAC3BN,EAAEI,OAAOC,UAAUE,OAAO,wBAC1BP,EAAEI,OAAOC,UAAUG,IAAI,iBACvBP,EAAIQ,MAAMC,OAAS,UAEnBV,EAAEI,OAAOC,UAAUG,IAAI,wBACvBR,EAAEI,OAAOC,UAAUE,OAAO,iBAC1BN,EAAIQ,MAAMC,OAAS,cAcnB,0BAAUC,GAAG,SAASC,SAVX,SAACZ,GAChBJ,EAAQI,EAAEI,OAAOS,QASb,SAA6ChB,Q,gBCK1CiB,EA9BG,SAAC,GAAS,EAARjB,KAgBhB,OACI,sBAAKC,UAAU,sBAAf,UACI,sBAAKA,UAAU,MAAf,UACI,sBAAMA,UAAU,QAAhB,gCACA,mBAAGA,UAAU,2BAA2BC,QAlBhC,SAACC,GACjB,IAAMC,EAAMC,SAASC,cAAc,wBAEhCH,EAAEI,OAAOC,UAAUC,SAAS,yBAC3BN,EAAEI,OAAOC,UAAUE,OAAO,wBAC1BP,EAAEI,OAAOC,UAAUG,IAAI,iBACvBP,EAAIQ,MAAMC,OAAS,UAEnBV,EAAEI,OAAOC,UAAUG,IAAI,wBACvBR,EAAEI,OAAOC,UAAUE,OAAO,iBAC1BN,EAAIQ,MAAMC,OAAS,cAUnB,qBAAKC,GAAG,gBC4CLI,MA/Df,WAEE,MAAoCC,mBAAS,2IAAD,OAM3B,gBAN2B,6BAQ5C,MAR4C,wGAYxB,2BAZwB,4CAgB5C,MAhB4C,s0BAA5C,mBAAOC,EAAP,KAAmBC,EAAnB,KAqDA,OAPAC,qBAAU,WACQjB,SAASC,cAAc,YAC/BiB,UAAYC,IAAOJ,GAC3BK,QAAQC,IAAIF,IAAOJ,MAClB,CAACA,IAIF,sBAAKnB,UAAU,MAAf,UACE,cAAC,EAAD,CAAQD,KAAMoB,EAAYrB,QAASsB,IACnC,cAAC,EAAD,CAAWrB,KAAMoB,QCpDRO,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCDdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFjC,SAASkC,eAAe,SAM1BZ,M","file":"static/js/main.b3e38e52.chunk.js","sourcesContent":["import React from \"react\";\r\n\r\nconst Viewer = ({setText,text})=>{\r\n\r\n    const btnOpenDown = (e)=>{\r\n        const div = document.querySelector('.viewer-container')\r\n\r\n        if(e.target.classList.contains('fa-expand-arrows-alt')){\r\n            e.target.classList.remove('fa-expand-arrows-alt')\r\n            e.target.classList.add('fa-expand-alt')\r\n            div.style.height = '100vh'\r\n        }else{\r\n            e.target.classList.add('fa-expand-arrows-alt')\r\n            e.target.classList.remove('fa-expand-alt')\r\n            div.style.height = '40vh'\r\n        }\r\n    }\r\n\r\n    const handleText = (e)=>{\r\n        setText(e.target.value)\r\n    }\r\n\r\n    return (\r\n        <div className=\"viewer-container\">\r\n            <div className=\"nav\">\r\n                <span className=\"title\">Editor</span>\r\n                <i className=\"fas fa-expand-arrows-alt\" onClick={btnOpenDown}></i>\r\n            </div>\r\n            <textarea id=\"editor\" onChange={handleText}>{text}</textarea>\r\n        </div>\r\n    )\r\n\r\n}\r\n\r\nexport default Viewer;","import React from \"react\";\r\nimport marked from \"marked\";\r\n\r\nconst PreViewer = ({text})=>{\r\n\r\n    const btnOpenDown = (e)=>{\r\n        const div = document.querySelector('.preViewer-container')\r\n\r\n        if(e.target.classList.contains('fa-expand-arrows-alt')){\r\n            e.target.classList.remove('fa-expand-arrows-alt')\r\n            e.target.classList.add('fa-expand-alt')\r\n            div.style.height = '100vh'\r\n        }else{\r\n            e.target.classList.add('fa-expand-arrows-alt')\r\n            e.target.classList.remove('fa-expand-alt')\r\n            div.style.height = '40vh'\r\n        }\r\n    }\r\n\r\n    return (\r\n        <div className=\"preViewer-container\">\r\n            <div className=\"nav\">\r\n                <span className=\"title\">Previewer Markdown</span>\r\n                <i className=\"fas fa-expand-arrows-alt\" onClick={btnOpenDown}></i>\r\n            </div>\r\n            <div id=\"preview\">\r\n                \r\n            </div>\r\n        </div>\r\n    )\r\n\r\n}\r\n\r\nexport default PreViewer;","import './App.css';\nimport Viewer from './components/Viewer';\nimport PreViewer from './components/Previewer';\nimport { useState, useEffect } from 'react';\nimport marked from 'marked';\n\nfunction App() {  \n\n  const [textEditor, setTextEditor] = useState(`\n  # Welcome to my React Markdown Previewer!\n\n## This is a sub-heading...\n### And here's some other cool stuff:\n\nHeres some code, ${'`<div></div>`'}, between 2 backticks.\n\n${'```'}\n// this is multi-line code:\n\nfunction anotherExample(firstLine, lastLine) {\n  if (firstLine == '${\"```' && lastLine == '```\"}') {\n    return multiLineCode;\n  }\n}\n${'```'}\n\nYou can also make text **bold**... whoa!\nOr _italic_.\nOr... wait for it... **_both!_**\nAnd feel free to go crazy ~~crossing stuff out~~.\n\nThere's also [links](https://www.freecodecamp.org), and\n> Block Quotes!\n\nAnd if you want to get really crazy, even tables:\n\nWild Header | Crazy Header | Another Header?\n------------ | ------------- | -------------\nYour content can | be here, and it | can be here....\nAnd here. | Okay. | I think we get it.\n\n- And of course there are lists.\n  - Some are bulleted.\n     - With different indentation levels.\n        - That look like this.\n\n\n1. And there are numbered lists too.\n1. Use just 1s if you want!\n1. And last but not least, let's not forget embedded images:\n\n![freeCodeCamp Logo](https://cdn.freecodecamp.org/testable-projects-fcc/images/fcc_secondary.svg)\n  `)\n\n  useEffect(() => {\n    const preview = document.querySelector('#preview')\n    preview.innerHTML = marked(textEditor)\n    console.log(marked(textEditor))\n  }, [textEditor])\n\n\n  return (\n    <div className=\"App\">\n      <Viewer text={textEditor} setText={setTextEditor} />\n      <PreViewer text={textEditor} />\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}